version: 0.2
env:
  shell: bash
  variables:
    CANARY_DURATION: 25200
    CANARY_TPS: 50
    CANARY_CLIENT_COUNT: 10
    CANARY_LOG_FILE: 'canary_log.txt'
    CANARY_LOG_LEVEL: 'Error'
    PACKAGE_NAME: 'aws-crt-nodejs'
    CANARY_SERVER_ARN: Mqtt5MosquittoSever
    CANARY_BUILD_S3_DST: mqtt5-canary/s3
    CODEBUILD_TICKET_ITEM: "IoT SDK for NodeJS"
phases:
  install:
    commands:
      - add-apt-repository ppa:openjdk-r/ppa
      - add-apt-repository ppa:ubuntu-toolchain-r/test
      - apt-get update -y
      - sudo apt-get install gcc-7 cmake ninja-build python3 python3-pip python3-dev -y
      - git submodule update --init --recursive
      - python3 -m pip install psutil
      - python3 -m pip install boto3
  build:
    commands:
      - echo Build started on `date`
      # Get secrets needed
      - export GIT_HASH=$(git rev-parse HEAD)
      # Get the endpoint, certificate, and key for connecting to IoT Core
      - export ENDPOINT=$(aws secretsmanager get-secret-value --secret-id ${CANARY_SERVER_ARN} --query "SecretString" | cut -f2 -d":" | sed -e 's/[\\\"\}]//g')
      - npm install --unsafe-perm
      # Run the Canary
      - cd canary/mqtt5
      - npm install --unsafe-perm
      - python3 ../../codebuild/CanaryWrapper.py --canary_executable node --canary_arguments "./dist/canary.js --duration ${CANARY_DURATION} --endpoint ${ENDPOINT} --tps ${CANARY_TPS} --clients ${CANARY_CLIENT_COUNT}" --git_hash ${GIT_HASH} --git_repo_name $PACKAGE_NAME --codebuild_log_path $CODEBUILD_LOG_PATH --ticket_item "${CODEBUILD_TICKET_ITEM}"
  post_build:
    commands:
      - echo Build completed on `date`